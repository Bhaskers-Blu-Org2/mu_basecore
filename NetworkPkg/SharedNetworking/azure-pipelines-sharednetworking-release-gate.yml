workspace:
  clean: all

trigger: none # will disable CI builds entirely

variables:
- group: SecMirrorCommon

steps:
- checkout: self
  clean: true

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.7.x'
    architecture: 'x64'

- script: python -m pip install --upgrade pip
  displayName: 'Install/Upgrade pip'

- script: pip install -r requirements.txt --upgrade
  displayName: 'Install/Upgrade mu_build'

# Create a variable
- powershell: |
    Write-Host "##vso[task.setvariable variable=GIT_CREDS]projectmu:$(secmircom.pat)"
- script: |
    echo my pipeline variable is $(GIT_CREDS)

# Update dependencies
- task: CmdLine@1
  displayName: Setup
  inputs:
    filename: stuart_ci_setup
    arguments: -c NetworkPkg/SharedNetworking/SharedNetworkiSettings.py

- task: CmdLine@1
  displayName: 'Update Dependencies'
  inputs:
    filename: stuart_update
    arguments: -c NetworkPkg/SharedNetworking/SharedNetworkiSettings.py --Tool_Chain VS2017
    failOnStderr: false


# Build and publish
- task: PythonScript@0
  displayName: 'Build and Ship'
  inputs:
    scriptSource: 'filePath'
    scriptPath: 'NetworkPkg/SharedNetworking/DriverBuilder.py'
    arguments: '-c NetworkPkg/SharedNetworking/SharedNetworkiSettings.py --dump-version --api-key=$(NUGET_API_KEY)'
    failOnStderr: true

# Copy the Nuget Package
- task: CopyFiles@2
  displayName: 'Copy Nuget Pkg'
  inputs:
    contents: 'Build/**.nupkg'
    targetFolder: $(Build.ArtifactStagingDirectory)
# Copy the TXT file
- task: CopyFiles@2
  displayName: 'Copy Build files'
  inputs:
    contents: |
      Build\**\BUILDLOG_*.txt
      Build\**\BUILDLOG_*.md
      Build\**\CI_*.txt
      Build\**\CI_*.md
      Build\**\TestSuites.xml
    targetFolder: $(Build.ArtifactStagingDirectory)

# Publish Build Artifacts
# Publish build artifacts to Azure Artifacts/TFS or a file share
- task: PublishBuildArtifacts@1
  displayName: 'Publish NugetPackage'
  continueOnError: true
  condition: succeeded()
  inputs:
    artifactName: 'Nuget Package'

# publish to Nuget
- task: NuGetCommand@2
  inputs:
    command: push
    nuGetFeedType: external
    publishFeedCredentials: 'Uefibot_Mu_SharedCrypto'
    versioningScheme: byEnvV
    versionEnvVar: NugetPackageVersion
